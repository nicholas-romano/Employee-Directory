{"version":3,"sources":["components/Header.js","components/Search.js","components/Employee.js","components/EmployeesTable.js","utils/API.js","components/EmployeesDirectory.js","App.js","index.js"],"names":["Header","className","Component","Search","props","id","htmlFor","type","onChange","this","filterByName","placeholder","Employee","formatDate","date","dateString","dob","toString","yearEnd","indexOf","year","substring","monthEnd","month","substr","day","order","image","name","phone","email","src","alt","href","EmployeesTable","renderEmployee","employee","index","undefined","display","key","scope","title","onClick","sortAlpha","employees","sortArrow","map","axios","require","get","EmployeesDirectory","state","query","sortedEmployees","sortType","createNewEmployeesList","newEmployeesList","first","last","picture","large","setState","event","target","value","newEmployeeTable","length","toLowerCase","sort","dynamicSort","property","sortOrder","a","b","localeCompare","loadAllEmployees","API","then","res","data","results","catch","err","console","log","employeesList","sortState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78abe084.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../css/styles.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <h3 className=\"display-4\">Employee Directory</h3>\n                    <p className=\"lead\">Search for an employee by name by typing in the search box below.<br />\n                    Sort the employees alphabetically and reverse alphabetically by clicking on the Name column heading.</p>\n                </div>\n            </header>\n        );\n    }\n\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass Search extends Component  {\n\n    render(props) {\n        return (\n            <div>\n                <form id=\"search-form\" className=\"form-inline\">\n                    <div className=\"form-group mb-2\">\n                        <label htmlFor=\"Search\" className=\"sr-only\">Search Names</label>\n                        <input type=\"text\" className=\"form-control\" id=\"search-query\" onChange={this.props.filterByName} placeholder=\"Search by name\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport '../css/styles.css';\n\nclass Employee extends Component {\n\n    formatDate = date => {\n        const dateString = date.dob.toString();\n        const yearEnd = dateString.indexOf('-');\n        const year = dateString.substring(0, yearEnd);\n        const monthEnd = dateString.indexOf('-', yearEnd + 1);\n        let month = dateString.substring(yearEnd + 1, monthEnd);\n        month = (month.substr(0, 1) === '0') ? month.substr(1) : month;\n        let day = dateString.substr(monthEnd + 1, 2);\n        day = (day.substr(0, 1) === '0') ? day.substr(1) : day;\n\n        return `${month}-${day}-${year}`;\n        \n    }\n\n    render(props) {\n\n        const { order, image, name, phone, email, dob } = this.props;\n        \n        return (\n            <tr>\n                <td>{order}</td>\n                <td><img src={image} alt={name} /></td>\n                <td>{name}</td>\n                <td>{phone}</td>\n                <td><a href={`mailto:${email}`}>{email}</a></td>\n                <td>{this.formatDate({dob})}</td>\n            </tr>\n        )\n    }\n\n}\n\nexport default Employee;","import React, { Component } from \"react\";\nimport Employee from './Employee';\n\nclass EmployeesTable extends Component {\n\n    renderEmployee = (employee, index) => {\n\n        let displayed;\n\n        if (employee.display === undefined) {\n            displayed = true;\n        } else {\n            displayed = employee.display;\n        }\n\n        if (displayed === true) {\n            return (\n                <Employee \n                    key={index}\n                    order={index + 1}\n                    image={employee.image}\n                    name={employee.name}\n                    phone={employee.phone}\n                    email={employee.email}\n                    dob={employee.dob}\n                />\n            );\n        }\n\n    }\n\n    render(props) {\n        \n        return (\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Image</th>\n                        <th scope=\"col\" className=\"clickable\" title=\"Sort alphabetically\" \n                            onClick={() => this.props.sortAlpha(this.props.employees)}>Name {this.props.sortArrow}</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.props.employees.map((employee, index) => (\n                            this.renderEmployee(employee, index)\n                        ))\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n}\n\nexport default EmployeesTable;\n","const axios = require('axios');\n\nexport default {\n  getEmployees: function() {\n    return axios.get('https://randomuser.me/api/?inc=name,email,dob,picture,phone&nat=us&results=50');\n  }\n};","import React, { Component } from \"react\";\nimport Header from './Header';\nimport Search from './Search';\nimport EmployeesTable from './EmployeesTable';\nimport API from \"../utils/API\";\n\nclass EmployeesDirectory extends Component {\n\n    state = {\n        employees: [],\n        query: '',\n        sortedEmployees: [],\n        sortType: ''\n    };\n\n    componentDidMount() {\n       this.loadAllEmployees();\n    }\n\n    loadAllEmployees() {\n        API.getEmployees()\n        .then(res => { \n            this.createNewEmployeesList(res.data.results);\n        })\n        .catch(err => console.log(err));\n    }\n\n    createNewEmployeesList = employees => {\n\n        const newEmployeesList = employees.map((employee => {\n\n            return (\n                {\n                    dob: employee.dob.date,\n                    email: employee.email,\n                    name: `${employee.name.first} ${employee.name.last}`,\n                    phone: employee.phone,\n                    image: employee.picture.large\n                }\n            )\n\n        }))\n\n        this.setState({\n            employees: newEmployeesList\n        })\n    }\n\n     //Filter by search input:\n     filterByName = event => {\n\n        const query = event.target.value;\n\n         this.setState({\n            query\n        }, () => {\n\n            let employeesList;\n\n            if (this.state.sortedEmployees.length > 0) {\n                employeesList = this.state.sortedEmployees;\n            } else {\n                employeesList = this.state.employees;\n            }\n           \n            //add display: true/false to display the record if it matches the search string:\n            const newEmployeeTable = employeesList.map(employee => {\n                let name = employee.name.toLowerCase();\n\n                if (name.indexOf(this.state.query.toLowerCase()) !== -1) {\n                    return {...employee, display: true}\n                } else {\n                    return {...employee, display: false}\n                }\n            });\n\n            this.setState({\n                employees: newEmployeeTable,\n                sortedEmployees: newEmployeeTable\n            });\n\n        });\n\n    }\n\n    //sort alphabetically/reverse alphabetically employees by some name key:\n    sortAlpha = employees => {\n\n        const sortType = this.state.sortType;\n\n        if (sortType === 'desc' || sortType === '') {\n            //sort alpha ascending order:\n            employees.sort(this.dynamicSort(\"name\"));\n            this.setState({\n                sortedEmployees: employees,\n                sortType: 'asc'\n            });\n        } else if (sortType === 'asc') {\n            //sort alpha descending order:\n            employees.sort(this.dynamicSort(\"-name\"));\n            this.setState({\n                sortedEmployees: employees,\n                sortType: 'desc'\n            });\n        }\n\n    }\n\n    //reorders employees list alphabetically/reverse alphabetically:\n    dynamicSort = property => {\n\n        var sortOrder = 1;\n\n        if(property[0] === \"-\") {\n            sortOrder = -1;\n            property = property.substr(1);\n        }\n\n        return function (a,b) {\n            if (sortOrder === -1) {\n                return b[property].localeCompare(a[property]);\n            } else {\n                return a[property].localeCompare(b[property]);\n            }        \n        }\n    }\n\n    render() {\n\n        let employeesList;\n\n        if (this.state.sortedEmployees.length > 0) {\n            employeesList = this.state.sortedEmployees;\n        } else {\n            employeesList = this.state.employees;\n        }\n\n        //&#9650; up arrow\n        //&#9660; down arrow\n\n        let sortArrow;\n\n        const sortState = this.state.sortType;\n\n        if (sortState === 'asc') {\n            //down arrow\n            sortArrow = <span>&#9660;</span>;\n        } else if (sortState === 'desc') {\n            //up arrow\n            sortArrow = <span>&#9650;</span>;\n        } else {\n            sortArrow = '';\n        }\n\n        return(\n            <>\n                <Header />\n                <Search filterByName={this.filterByName} query={this.state.query} />\n                <EmployeesTable employees={employeesList} sortAlpha={this.sortAlpha} sortArrow={sortArrow}  />\n            </>\n        );\n    }\n}\n\nexport default EmployeesDirectory;","import React from \"react\";\nimport EmployeesDirectory from './components/EmployeesDirectory';\n\nfunction App() {\n  return (\n    <EmployeesDirectory />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}